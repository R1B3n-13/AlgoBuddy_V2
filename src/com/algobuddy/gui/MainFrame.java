package com.algobuddy.gui;

import com.algobuddy.graphalgos.BFS;
import com.algobuddy.graphalgos.Dijkstra;
import com.algobuddy.recursionalgos.BinomialCoefficient;
import com.algobuddy.recursionalgos.BinomialCoefficient_without_mem;
import com.algobuddy.recursionalgos.FastPower;
import com.algobuddy.recursionalgos.Fibo_without_mem;
import com.algobuddy.recursionalgos.Fibonacci;
import com.algobuddy.recursionalgos.LCS;
import com.algobuddy.recursionalgos.LCS_without_mem;
import com.formdev.flatlaf.intellijthemes.materialthemeuilite.FlatNightOwlIJTheme;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Container;
import java.awt.Desktop;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.event.ActionEvent;
import java.awt.event.MouseEvent;
import java.io.File;
import java.io.IOException;
import java.net.URISyntaxException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JEditorPane;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.KeyStroke;
import javax.swing.UIManager;
import javax.swing.event.HyperlinkEvent;
import javax.swing.plaf.basic.BasicScrollBarUI;

/**
 *
 * @author nebir, nazrul
 */
public class MainFrame extends javax.swing.JFrame {

    private int prevX, prevY, extendedState = NORMAL;
    private Action enterAction;
    private static MainFrame mainFrame;

    private int cur_id = 0;
    private static int[] par2;
    private static int[] lev2;
    private static int[] val2;
    private static ArrayList<ArrayList<Integer>> ind2;

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        enterAction = new EnterAction();
        introPanel.getInputMap().put(KeyStroke.getKeyStroke("ENTER"), "enter");
        introPanel.getActionMap().put("enter", enterAction);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleBar = new javax.swing.JPanel();
        closeLabel = new javax.swing.JLabel();
        minimizeLabel = new javax.swing.JLabel();
        backLabel = new javax.swing.JLabel();
        nextLabel = new javax.swing.JLabel();
        mainPanel = new com.algobuddy.gui.JSlidingPane();
        introPanel = new keeptoo.KGradientPanel();
        introLogoLabel = new javax.swing.JLabel();
        introTextLabel = new javax.swing.JLabel();
        introGifLabel = new javax.swing.JLabel();
        indexPanel = new keeptoo.KGradientPanel();
        indexLabel = new javax.swing.JLabel();
        goToGraphButton = new javax.swing.JButton();
        goToRecursionButton = new javax.swing.JButton();
        goToSortButton = new javax.swing.JButton();
        userManualButton = new javax.swing.JButton();
        graphIndexPanel = new keeptoo.KGradientPanel();
        graphIndexLabel = new javax.swing.JLabel();
        goToBfsButton = new javax.swing.JButton();
        goToDijkstraButton = new javax.swing.JButton();
        goToDfsButton = new javax.swing.JButton();
        goToMstButton = new javax.swing.JButton();
        algoOverviewPanel = new javax.swing.JPanel();
        simulationPanel = new com.algobuddy.gui.GraphPanel();
        treeSimulationPanel = new javax.swing.JPanel();
        comPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        function = new javax.swing.JComboBox<>();
        memButton = new javax.swing.JRadioButton();
        holder = new javax.swing.JPanel();
        fPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        input = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        fiboRunLabel = new javax.swing.JLabel();
        fiboResetLabel = new javax.swing.JLabel();
        fpPanel = new javax.swing.JPanel();
        n_field = new javax.swing.JTextField();
        p_field = new javax.swing.JTextField();
        n_label = new javax.swing.JLabel();
        p_label = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        fastPowerRunLabel = new javax.swing.JLabel();
        fpResetLabel = new javax.swing.JLabel();
        bcPanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        bc_n_label = new javax.swing.JLabel();
        bc_k_label = new javax.swing.JLabel();
        bc_n_field = new javax.swing.JTextField();
        bc_k_field = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        bcRunLabel = new javax.swing.JLabel();
        bcResetLabel = new javax.swing.JLabel();
        lcsPanel = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea4 = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lcs_a_field = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        lcs_b_field = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lcs_i_field = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        lcs_j_field = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        lcsRunLabel = new javax.swing.JLabel();
        lcsResetLabel = new javax.swing.JLabel();
        artPanel = new com.algobuddy.gui.recursionPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowDeiconified(java.awt.event.WindowEvent evt) {
                formWindowDeiconified(evt);
            }
        });

        titleBar.setBackground(new java.awt.Color(13, 8, 18));
        titleBar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(13, 8, 18)));
        titleBar.setPreferredSize(new java.awt.Dimension(800, 25));
        titleBar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                titleBarMouseDragged(evt);
            }
        });
        titleBar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                titleBarMousePressed(evt);
            }
        });

        closeLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/algobuddy/gui/img/closeLabel.png"))); // NOI18N
        closeLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                closeLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                closeLabelMouseExited(evt);
            }
        });

        minimizeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        minimizeLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/algobuddy/gui/img/minimizeLabel.png"))); // NOI18N
        minimizeLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                minimizeLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                minimizeLabelMouseExited(evt);
            }
        });

        backLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        backLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/algobuddy/gui/img/backLabel.png"))); // NOI18N
        backLabel.setVisible(false);
        backLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                backLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                backLabelMouseExited(evt);
            }
        });

        nextLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/algobuddy/gui/img/nextLabel.png"))); // NOI18N
        nextLabel.setVisible(false);
        nextLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nextLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                nextLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                nextLabelMouseExited(evt);
            }
        });

        javax.swing.GroupLayout titleBarLayout = new javax.swing.GroupLayout(titleBar);
        titleBar.setLayout(titleBarLayout);
        titleBarLayout.setHorizontalGroup(
            titleBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, titleBarLayout.createSequentialGroup()
                .addComponent(backLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nextLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 1766, Short.MAX_VALUE)
                .addComponent(minimizeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(closeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        titleBarLayout.setVerticalGroup(
            titleBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(closeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
            .addComponent(minimizeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(backLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(nextLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getContentPane().add(titleBar, java.awt.BorderLayout.PAGE_START);

        introPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(13, 8, 18)));
        introPanel.setkEndColor(new java.awt.Color(18, 5, 32));
        introPanel.setkStartColor(new java.awt.Color(10, 10, 15));
        introPanel.setName("introPanel"); // NOI18N
        introPanel.setPreferredSize(new java.awt.Dimension(800, 600));

        introLogoLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        introLogoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/algobuddy/gui/img/introLogo.png"))); // NOI18N

        introTextLabel.setBackground(new java.awt.Color(205, 214, 224));
        introTextLabel.setFont(new java.awt.Font("Baskerville Old Face", 1, 72)); // NOI18N
        introTextLabel.setForeground(new java.awt.Color(172, 179, 186));
        introTextLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        introTextLabel.setText("AlgoBuddy");
        introTextLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        introTextLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                introTextLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                introTextLabelMouseExited(evt);
            }
        });

        introGifLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        introGifLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/algobuddy/gui/img/introGifLabel.gif"))); // NOI18N
        introGifLabel.setName(""); // NOI18N

        javax.swing.GroupLayout introPanelLayout = new javax.swing.GroupLayout(introPanel);
        introPanel.setLayout(introPanelLayout);
        introPanelLayout.setHorizontalGroup(
            introPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(introPanelLayout.createSequentialGroup()
                .addGroup(introPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(introPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(introGifLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 1832, Short.MAX_VALUE))
                    .addGroup(introPanelLayout.createSequentialGroup()
                        .addGap(227, 227, 227)
                        .addComponent(introTextLabel)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(introPanelLayout.createSequentialGroup()
                .addGap(358, 358, 358)
                .addComponent(introLogoLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        introPanelLayout.setVerticalGroup(
            introPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(introPanelLayout.createSequentialGroup()
                .addGap(154, 154, 154)
                .addComponent(introLogoLabel)
                .addGap(18, 18, 18)
                .addComponent(introTextLabel)
                .addGap(18, 18, 18)
                .addComponent(introGifLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(664, Short.MAX_VALUE))
        );

        mainPanel.add(introPanel, "introPanel");

        indexPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(18, 8, 13)));
        indexPanel.setkEndColor(new java.awt.Color(32, 5, 18));
        indexPanel.setkStartColor(new java.awt.Color(15, 10, 10));
        indexPanel.setName("indexPanel"); // NOI18N
        indexPanel.setPreferredSize(new java.awt.Dimension(800, 600));

        indexLabel.setFont(new java.awt.Font("Georgia", 0, 48)); // NOI18N
        indexLabel.setForeground(new java.awt.Color(157, 162, 173));
        indexLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        indexLabel.setText("INDEX");

        goToGraphButton.setBackground(new java.awt.Color(101, 89, 94, 50));
        goToGraphButton.setFont(new java.awt.Font("Cambria", 1, 20)); // NOI18N
        goToGraphButton.setForeground(new java.awt.Color(172, 179, 186));
        goToGraphButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/algobuddy/gui/img/graphLogo.png"))); // NOI18N
        goToGraphButton.setText("Graph Algorithms");
        goToGraphButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 10));
        goToGraphButton.setBorderPainted(false);
        goToGraphButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        goToGraphButton.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        goToGraphButton.setIconTextGap(20);
        goToGraphButton.setMaximumSize(new java.awt.Dimension(244, 72));
        goToGraphButton.setMinimumSize(new java.awt.Dimension(244, 72));
        goToGraphButton.setPreferredSize(new java.awt.Dimension(244, 72));
        goToGraphButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                goToGraphButtonMouseClicked(evt);
            }
        });

        goToRecursionButton.setBackground(new java.awt.Color(101, 89, 94, 50));
        goToRecursionButton.setFont(new java.awt.Font("Cambria", 1, 17)); // NOI18N
        goToRecursionButton.setForeground(new java.awt.Color(172, 179, 186));
        goToRecursionButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/algobuddy/gui/img/recursionTreeLogo.png"))); // NOI18N
        goToRecursionButton.setText("Recursion Tree Builder");
        goToRecursionButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 10));
        goToRecursionButton.setBorderPainted(false);
        goToRecursionButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        goToRecursionButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        goToRecursionButton.setIconTextGap(14);
        goToRecursionButton.setMaximumSize(new java.awt.Dimension(244, 72));
        goToRecursionButton.setMinimumSize(new java.awt.Dimension(244, 72));
        goToRecursionButton.setPreferredSize(new java.awt.Dimension(244, 72));
        goToRecursionButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                goToRecursionButtonMouseClicked(evt);
            }
        });

        goToSortButton.setBackground(new java.awt.Color(101, 89, 94, 50));
        goToSortButton.setFont(new java.awt.Font("Cambria", 1, 20)); // NOI18N
        goToSortButton.setForeground(new java.awt.Color(172, 179, 186));
        goToSortButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/algobuddy/gui/img/sortLogo.png"))); // NOI18N
        goToSortButton.setText("Sorting Algorithms");
        goToSortButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 10));
        goToSortButton.setBorderPainted(false);
        goToSortButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        goToSortButton.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        goToSortButton.setIconTextGap(20);
        goToSortButton.setMaximumSize(new java.awt.Dimension(244, 72));
        goToSortButton.setMinimumSize(new java.awt.Dimension(244, 72));
        goToSortButton.setPreferredSize(new java.awt.Dimension(244, 72));

        userManualButton.setBackground(new java.awt.Color(101, 89, 94, 50));
        userManualButton.setFont(new java.awt.Font("Cambria", 1, 20)); // NOI18N
        userManualButton.setForeground(new java.awt.Color(172, 179, 186));
        userManualButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/algobuddy/gui/img/manualLogo.png"))); // NOI18N
        userManualButton.setText("User Manual");
        userManualButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 10));
        userManualButton.setBorderPainted(false);
        userManualButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        userManualButton.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        userManualButton.setIconTextGap(38);
        userManualButton.setMaximumSize(new java.awt.Dimension(244, 72));
        userManualButton.setMinimumSize(new java.awt.Dimension(244, 72));
        userManualButton.setPreferredSize(new java.awt.Dimension(244, 72));

        javax.swing.GroupLayout indexPanelLayout = new javax.swing.GroupLayout(indexPanel);
        indexPanel.setLayout(indexPanelLayout);
        indexPanelLayout.setHorizontalGroup(
            indexPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(indexPanelLayout.createSequentialGroup()
                .addContainerGap(800, Short.MAX_VALUE)
                .addGroup(indexPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(userManualButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(indexPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(goToGraphButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(goToSortButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(goToRecursionButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(indexLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(800, Short.MAX_VALUE))
        );
        indexPanelLayout.setVerticalGroup(
            indexPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(indexPanelLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(indexLabel)
                .addGap(45, 45, 45)
                .addComponent(goToGraphButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(goToSortButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(goToRecursionButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(userManualButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(584, Short.MAX_VALUE))
        );

        mainPanel.add(indexPanel, "indexPanel");

        graphIndexPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(8, 13, 18)));
        graphIndexPanel.setkEndColor(new java.awt.Color(5, 18, 32));
        graphIndexPanel.setkStartColor(new java.awt.Color(10, 10, 15));
        graphIndexPanel.setName("graphIndexPanel"); // NOI18N
        graphIndexPanel.setPreferredSize(new java.awt.Dimension(800, 600));

        graphIndexLabel.setFont(new java.awt.Font("Georgia", 0, 36)); // NOI18N
        graphIndexLabel.setForeground(new java.awt.Color(157, 162, 173));
        graphIndexLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        graphIndexLabel.setText("GRAPH ALGORITHMS");

        goToBfsButton.setBackground(new java.awt.Color(89, 94, 101, 50));
        goToBfsButton.setFont(new java.awt.Font("Cambria", 1, 20)); // NOI18N
        goToBfsButton.setForeground(new java.awt.Color(172, 179, 186));
        goToBfsButton.setText("Breadth First Search");
        goToBfsButton.setBorder(null);
        goToBfsButton.setBorderPainted(false);
        goToBfsButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        goToBfsButton.setMaximumSize(new java.awt.Dimension(244, 72));
        goToBfsButton.setMinimumSize(new java.awt.Dimension(244, 72));
        goToBfsButton.setPreferredSize(new java.awt.Dimension(244, 72));
        goToBfsButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                goToBfsButtonMouseClicked(evt);
            }
        });

        goToDijkstraButton.setBackground(new java.awt.Color(89, 94, 101, 50));
        goToDijkstraButton.setFont(new java.awt.Font("Cambria", 1, 20)); // NOI18N
        goToDijkstraButton.setForeground(new java.awt.Color(172, 179, 186));
        goToDijkstraButton.setText("Dijkstra");
        goToDijkstraButton.setBorder(null);
        goToDijkstraButton.setBorderPainted(false);
        goToDijkstraButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        goToDijkstraButton.setMaximumSize(new java.awt.Dimension(244, 72));
        goToDijkstraButton.setMinimumSize(new java.awt.Dimension(244, 72));
        goToDijkstraButton.setPreferredSize(new java.awt.Dimension(244, 72));
        goToDijkstraButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                goToDijkstraButtonMouseClicked(evt);
            }
        });

        goToDfsButton.setBackground(new java.awt.Color(89, 94, 101, 50));
        goToDfsButton.setFont(new java.awt.Font("Cambria", 1, 20)); // NOI18N
        goToDfsButton.setForeground(new java.awt.Color(172, 179, 186));
        goToDfsButton.setText("Depth First Search");
        goToDfsButton.setBorder(null);
        goToDfsButton.setBorderPainted(false);
        goToDfsButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        goToDfsButton.setMaximumSize(new java.awt.Dimension(244, 72));
        goToDfsButton.setMinimumSize(new java.awt.Dimension(244, 72));
        goToDfsButton.setPreferredSize(new java.awt.Dimension(244, 72));

        goToMstButton.setBackground(new java.awt.Color(89, 94, 101, 50));
        goToMstButton.setFont(new java.awt.Font("Cambria", 1, 20)); // NOI18N
        goToMstButton.setForeground(new java.awt.Color(172, 179, 186));
        goToMstButton.setText("Minimum Spanning Tree");
        goToMstButton.setBorder(null);
        goToMstButton.setBorderPainted(false);
        goToMstButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        goToMstButton.setMaximumSize(new java.awt.Dimension(244, 72));
        goToMstButton.setMinimumSize(new java.awt.Dimension(244, 72));
        goToMstButton.setPreferredSize(new java.awt.Dimension(244, 72));

        javax.swing.GroupLayout graphIndexPanelLayout = new javax.swing.GroupLayout(graphIndexPanel);
        graphIndexPanel.setLayout(graphIndexPanelLayout);
        graphIndexPanelLayout.setHorizontalGroup(
            graphIndexPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(graphIndexPanelLayout.createSequentialGroup()
                .addGroup(graphIndexPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(graphIndexPanelLayout.createSequentialGroup()
                        .addGap(210, 210, 210)
                        .addComponent(graphIndexLabel))
                    .addGroup(graphIndexPanelLayout.createSequentialGroup()
                        .addGap(277, 277, 277)
                        .addGroup(graphIndexPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(goToDfsButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(goToBfsButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(goToDijkstraButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(goToMstButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(1257, Short.MAX_VALUE))
        );
        graphIndexPanelLayout.setVerticalGroup(
            graphIndexPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(graphIndexPanelLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(graphIndexLabel)
                .addGap(18, 18, 18)
                .addComponent(goToBfsButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(goToDfsButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(goToDijkstraButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(goToMstButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(623, Short.MAX_VALUE))
        );

        mainPanel.add(graphIndexPanel, "graphIndexPanel");

        algoOverviewPanel.setBackground(new java.awt.Color(57, 55, 55));
        algoOverviewPanel.setName("algoOverviewPanel"); // NOI18N

        javax.swing.GroupLayout algoOverviewPanelLayout = new javax.swing.GroupLayout(algoOverviewPanel);
        algoOverviewPanel.setLayout(algoOverviewPanelLayout);
        algoOverviewPanelLayout.setHorizontalGroup(
            algoOverviewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1846, Short.MAX_VALUE)
        );
        algoOverviewPanelLayout.setVerticalGroup(
            algoOverviewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1032, Short.MAX_VALUE)
        );

        mainPanel.add(algoOverviewPanel, "bfsOverviewPanel");

        simulationPanel.setName("simulationPanel"); // NOI18N
        mainPanel.add(simulationPanel, "bfsSimulationPanel");

        treeSimulationPanel.setBackground(new java.awt.Color(38, 112, 139));
        treeSimulationPanel.setForeground(new java.awt.Color(255, 255, 255));
        treeSimulationPanel.setName("treeSimulationPanel"); // NOI18N

        comPanel.setBackground(new java.awt.Color(1, 22, 39));

        jLabel1.setBackground(new java.awt.Color(1, 22, 39));
        jLabel1.setFont(new java.awt.Font("Consolas", 1, 20)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(182, 207, 216));
        jLabel1.setText("Pre-defined Template :");

        function.setBackground(new java.awt.Color(38, 112, 139));
        function.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        function.setForeground(new java.awt.Color(182, 207, 216));
        function.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Fibonacci", "Fast Power", "Binomial Coefficent", "Longest Common Subsequence" }));
        function.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                functionActionPerformed(evt);
            }
        });

        memButton.setBackground(new java.awt.Color(1, 22, 39));
        memButton.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        memButton.setForeground(new java.awt.Color(182, 207, 216));
        memButton.setSelected(true);
        memButton.setText("Enable Memoization");
        memButton.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        memButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/algobuddy/gui/img/switchOn.png"))); // NOI18N
        memButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                memButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout comPanelLayout = new javax.swing.GroupLayout(comPanel);
        comPanel.setLayout(comPanelLayout);
        comPanelLayout.setHorizontalGroup(
            comPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(comPanelLayout.createSequentialGroup()
                .addGroup(comPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(comPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(comPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(function, 0, 250, Short.MAX_VALUE)))
                    .addGroup(comPanelLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(memButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        comPanelLayout.setVerticalGroup(
            comPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(comPanelLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(function, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(memButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        holder.setBackground(new java.awt.Color(255, 255, 255));
        holder.setLayout(new java.awt.CardLayout());

        fPanel.setBackground(new java.awt.Color(1, 22, 39));

        jTextArea1.setBackground(new java.awt.Color(0, 16, 29));
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Consolas", 2, 14)); // NOI18N
        jTextArea1.setForeground(new java.awt.Color(182, 207, 216));
        jTextArea1.setRows(5);
        jTextArea1.setText("\nfunction fn(n) {\n  if (n == 0 || n == 1)\n    return n\n  \n  return fn(n-1) + fn(n-2)\n}");
        jScrollPane1.setViewportView(jTextArea1);

        input.setBackground(new java.awt.Color(38, 112, 139));
        input.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        input.setForeground(new java.awt.Color(182, 207, 216));
        input.setText("12");

        jLabel9.setBackground(new java.awt.Color(1, 22, 39));
        jLabel9.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(182, 207, 216));
        jLabel9.setText("n = ");

        jLabel10.setBackground(new java.awt.Color(1, 22, 39));
        jLabel10.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(182, 207, 216));
        jLabel10.setText("Recursive Function:");

        jLabel11.setBackground(new java.awt.Color(1, 22, 39));
        jLabel11.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(182, 207, 216));
        jLabel11.setText("Function Parameter:");

        fiboRunLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/algobuddy/gui/img/playEnabled.png"))); // NOI18N
        fiboRunLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fiboRunLabelMouseClicked(evt);
            }
        });

        fiboResetLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/algobuddy/gui/img/resetDisabled.png"))); // NOI18N
        fiboResetLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fiboResetLabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout fPanelLayout = new javax.swing.GroupLayout(fPanel);
        fPanel.setLayout(fPanelLayout);
        fPanelLayout.setHorizontalGroup(
            fPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(fPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(fPanelLayout.createSequentialGroup()
                        .addGroup(fPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(fPanelLayout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(0, 145, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(fPanelLayout.createSequentialGroup()
                        .addGroup(fPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(fPanelLayout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel10))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, fPanelLayout.createSequentialGroup()
                        .addComponent(fiboRunLabel)
                        .addGap(18, 18, 18)
                        .addComponent(fiboResetLabel)
                        .addGap(233, 233, 233))))
        );
        fPanelLayout.setVerticalGroup(
            fPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fPanelLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(fPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(fPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(fiboRunLabel)
                    .addComponent(fiboResetLabel))
                .addContainerGap(390, Short.MAX_VALUE))
        );

        holder.add(fPanel, "card2");

        fpPanel.setBackground(new java.awt.Color(1, 22, 39));
        fpPanel.setForeground(new java.awt.Color(0, 0, 0));
        fpPanel.setPreferredSize(new java.awt.Dimension(335, 953));

        n_field.setBackground(new java.awt.Color(38, 112, 139));
        n_field.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        n_field.setForeground(new java.awt.Color(182, 207, 216));
        n_field.setText("2");

        p_field.setBackground(new java.awt.Color(38, 112, 139));
        p_field.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        p_field.setForeground(new java.awt.Color(182, 207, 216));
        p_field.setText("5");

        n_label.setBackground(new java.awt.Color(255, 255, 255));
        n_label.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        n_label.setForeground(new java.awt.Color(182, 207, 216));
        n_label.setText("n = ");

        p_label.setBackground(new java.awt.Color(255, 255, 255));
        p_label.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        p_label.setForeground(new java.awt.Color(182, 207, 216));
        p_label.setText("p =");

        jTextArea2.setBackground(new java.awt.Color(0, 16, 29));
        jTextArea2.setColumns(20);
        jTextArea2.setFont(new java.awt.Font("Consolas", 2, 14)); // NOI18N
        jTextArea2.setForeground(new java.awt.Color(182, 207, 216));
        jTextArea2.setRows(5);
        jTextArea2.setText("\nfunction fn(n,p) {\n  if (p == 0)\n    return 1\n  \n  if (p % 2 == 0)\n    return fn(n*n, p/2)\n  \n  return n * fn(n*n, (p-1)/2)\n}\n");
        jScrollPane2.setViewportView(jTextArea2);

        jLabel12.setBackground(new java.awt.Color(255, 255, 255));
        jLabel12.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(182, 207, 216));
        jLabel12.setText("Recursive Function:");

        jLabel13.setBackground(new java.awt.Color(255, 255, 255));
        jLabel13.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(182, 207, 216));
        jLabel13.setText("Function Parameters:");

        fastPowerRunLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/algobuddy/gui/img/playEnabled.png"))); // NOI18N
        fastPowerRunLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fastPowerRunLabelMouseClicked(evt);
            }
        });

        fpResetLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/algobuddy/gui/img/resetDisabled.png"))); // NOI18N
        fpResetLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fpResetLabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout fpPanelLayout = new javax.swing.GroupLayout(fpPanel);
        fpPanel.setLayout(fpPanelLayout);
        fpPanelLayout.setHorizontalGroup(
            fpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fpPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(fpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(fpPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addContainerGap())
                    .addGroup(fpPanelLayout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(119, 141, Short.MAX_VALUE))
                    .addGroup(fpPanelLayout.createSequentialGroup()
                        .addGroup(fpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(fpPanelLayout.createSequentialGroup()
                                .addComponent(n_label, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(n_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel12)
                            .addGroup(fpPanelLayout.createSequentialGroup()
                                .addComponent(p_label, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(fpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(fpPanelLayout.createSequentialGroup()
                                        .addComponent(fastPowerRunLabel)
                                        .addGap(18, 18, 18)
                                        .addComponent(fpResetLabel))
                                    .addComponent(p_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        fpPanelLayout.setVerticalGroup(
            fpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, fpPanelLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel13)
                .addGap(18, 18, 18)
                .addGroup(fpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(n_label, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(n_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(fpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(p_label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(p_field))
                .addGap(18, 18, 18)
                .addGroup(fpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fastPowerRunLabel)
                    .addComponent(fpResetLabel))
                .addGap(452, 452, 452))
        );

        holder.add(fpPanel, "card3");

        bcPanel.setBackground(new java.awt.Color(1, 22, 39));
        bcPanel.setForeground(new java.awt.Color(0, 0, 0));
        bcPanel.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N

        jTextArea3.setBackground(new java.awt.Color(0, 16, 29));
        jTextArea3.setColumns(20);
        jTextArea3.setFont(new java.awt.Font("Consolas", 2, 14)); // NOI18N
        jTextArea3.setForeground(new java.awt.Color(182, 207, 216));
        jTextArea3.setRows(5);
        jTextArea3.setText("\nfunction fn(n,k) {\n/* given n items, how many \ndifferent possible subsets of k items\ncan be formed */\n \n  if (k == 0 || n == k)\n      return 1\n  \n  return fn(n-1, k-1) + fn(n-1, k)\n}");
        jScrollPane3.setViewportView(jTextArea3);

        bc_n_label.setBackground(new java.awt.Color(255, 255, 255));
        bc_n_label.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        bc_n_label.setForeground(new java.awt.Color(182, 207, 216));
        bc_n_label.setText("n =");

        bc_k_label.setBackground(new java.awt.Color(255, 255, 255));
        bc_k_label.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        bc_k_label.setForeground(new java.awt.Color(182, 207, 216));
        bc_k_label.setText("k =");

        bc_n_field.setBackground(new java.awt.Color(38, 112, 139));
        bc_n_field.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        bc_n_field.setForeground(new java.awt.Color(182, 207, 216));
        bc_n_field.setText("5");

        bc_k_field.setBackground(new java.awt.Color(38, 112, 139));
        bc_k_field.setForeground(new java.awt.Color(182, 207, 216));
        bc_k_field.setText("2");
        bc_k_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bc_k_fieldActionPerformed(evt);
            }
        });

        jLabel14.setBackground(new java.awt.Color(255, 255, 255));
        jLabel14.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(182, 207, 216));
        jLabel14.setText("Recursive Function");

        jLabel15.setBackground(new java.awt.Color(255, 255, 255));
        jLabel15.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(182, 207, 216));
        jLabel15.setText("Function Parameters:");

        bcRunLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/algobuddy/gui/img/playEnabled.png"))); // NOI18N
        bcRunLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bcRunLabelMouseClicked(evt);
            }
        });

        bcResetLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/algobuddy/gui/img/resetDisabled.png"))); // NOI18N
        bcResetLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bcResetLabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout bcPanelLayout = new javax.swing.GroupLayout(bcPanel);
        bcPanel.setLayout(bcPanelLayout);
        bcPanelLayout.setHorizontalGroup(
            bcPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bcPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bcPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(bcPanelLayout.createSequentialGroup()
                        .addGroup(bcPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addGroup(bcPanelLayout.createSequentialGroup()
                                .addComponent(bc_n_label, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bc_n_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel15)
                            .addGroup(bcPanelLayout.createSequentialGroup()
                                .addComponent(bc_k_label, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(bcPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(bc_k_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(bcPanelLayout.createSequentialGroup()
                                        .addComponent(bcRunLabel)
                                        .addGap(18, 18, 18)
                                        .addComponent(bcResetLabel)))))
                        .addGap(0, 135, Short.MAX_VALUE)))
                .addContainerGap())
        );
        bcPanelLayout.setVerticalGroup(
            bcPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bcPanelLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel15)
                .addGap(18, 18, 18)
                .addGroup(bcPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bc_n_label, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bc_n_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(bcPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bc_k_label, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bc_k_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(bcPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bcRunLabel)
                    .addComponent(bcResetLabel))
                .addContainerGap(343, Short.MAX_VALUE))
        );

        holder.add(bcPanel, "card4");

        lcsPanel.setBackground(new java.awt.Color(1, 22, 39));

        jTextArea4.setBackground(new java.awt.Color(0, 16, 29));
        jTextArea4.setColumns(20);
        jTextArea4.setFont(new java.awt.Font("Consolas", 2, 14)); // NOI18N
        jTextArea4.setForeground(new java.awt.Color(182, 207, 216));
        jTextArea4.setRows(5);
        jTextArea4.setText("\nfunction fn(i,j) {\n  // i-th char of a, j-th char of b\n\n  if (i == a.length ||  j == b.length)\n      return 0\n  \n  if (a[i] == b[j])\n      return 1+fn(i+1, j+1)\n  \n  return Math.max(\n      fn(i+1, j),\n      fn(i, j+1)\n  )\n}");
        jTextArea4.setToolTipText("");
        jScrollPane4.setViewportView(jTextArea4);

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(182, 207, 216));
        jLabel2.setText("Recursive Function ");

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(182, 207, 216));
        jLabel3.setText("a =");

        lcs_a_field.setBackground(new java.awt.Color(38, 112, 139));
        lcs_a_field.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        lcs_a_field.setForeground(new java.awt.Color(182, 207, 216));
        lcs_a_field.setText("AGDUM");

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(182, 207, 216));
        jLabel4.setText("b = ");

        lcs_b_field.setBackground(new java.awt.Color(38, 112, 139));
        lcs_b_field.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        lcs_b_field.setForeground(new java.awt.Color(182, 207, 216));
        lcs_b_field.setText("BAGDUM");

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(182, 207, 216));
        jLabel5.setText("Strings:");

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(182, 207, 216));
        jLabel6.setText("i = ");

        lcs_i_field.setBackground(new java.awt.Color(38, 112, 139));
        lcs_i_field.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        lcs_i_field.setForeground(new java.awt.Color(182, 207, 216));
        lcs_i_field.setText("0");

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(182, 207, 216));
        jLabel7.setText("j =");

        lcs_j_field.setBackground(new java.awt.Color(38, 112, 139));
        lcs_j_field.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        lcs_j_field.setForeground(new java.awt.Color(182, 207, 216));
        lcs_j_field.setText("0");

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(182, 207, 216));
        jLabel8.setText("Function parameters");

        lcsRunLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/algobuddy/gui/img/playEnabled.png"))); // NOI18N
        lcsRunLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lcsRunLabelMouseClicked(evt);
            }
        });

        lcsResetLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/algobuddy/gui/img/resetDisabled.png"))); // NOI18N
        lcsResetLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lcsResetLabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout lcsPanelLayout = new javax.swing.GroupLayout(lcsPanel);
        lcsPanel.setLayout(lcsPanelLayout);
        lcsPanelLayout.setHorizontalGroup(
            lcsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lcsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(lcsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(lcsPanelLayout.createSequentialGroup()
                        .addGroup(lcsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel8)
                            .addGroup(lcsPanelLayout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lcs_i_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(lcsPanelLayout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lcs_a_field, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(lcsPanelLayout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lcs_b_field, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(lcsPanelLayout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(lcsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(lcsPanelLayout.createSequentialGroup()
                                        .addComponent(lcsRunLabel)
                                        .addGap(18, 18, 18)
                                        .addComponent(lcsResetLabel))
                                    .addComponent(lcs_j_field, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 120, Short.MAX_VALUE))
                    .addGroup(lcsPanelLayout.createSequentialGroup()
                        .addGroup(lcsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(lcsPanelLayout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        lcsPanelLayout.setVerticalGroup(
            lcsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lcsPanelLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addGroup(lcsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lcs_a_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(lcsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lcs_b_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(lcsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lcs_i_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(lcsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lcs_j_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(lcsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lcsRunLabel)
                    .addComponent(lcsResetLabel))
                .addContainerGap(201, Short.MAX_VALUE))
        );

        holder.add(lcsPanel, "card5");

        artPanel.setBackground(new java.awt.Color(1, 22, 39));

        javax.swing.GroupLayout artPanelLayout = new javax.swing.GroupLayout(artPanel);
        artPanel.setLayout(artPanelLayout);
        artPanelLayout.setHorizontalGroup(
            artPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1481, Short.MAX_VALUE)
        );
        artPanelLayout.setVerticalGroup(
            artPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout treeSimulationPanelLayout = new javax.swing.GroupLayout(treeSimulationPanel);
        treeSimulationPanel.setLayout(treeSimulationPanelLayout);
        treeSimulationPanelLayout.setHorizontalGroup(
            treeSimulationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(treeSimulationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(treeSimulationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(holder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(comPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(artPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        treeSimulationPanelLayout.setVerticalGroup(
            treeSimulationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(treeSimulationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(treeSimulationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(artPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(treeSimulationPanelLayout.createSequentialGroup()
                        .addComponent(comPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(holder, javax.swing.GroupLayout.PREFERRED_SIZE, 880, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        mainPanel.add(treeSimulationPanel, "treeSimulationPanel");

        getContentPane().add(mainPanel, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void titleBarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_titleBarMousePressed
        if (evt.getButton() == MouseEvent.BUTTON1) {
            prevX = evt.getX();
            prevY = evt.getY();
        }
    }//GEN-LAST:event_titleBarMousePressed

    private void titleBarMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_titleBarMouseDragged
        int b1 = MouseEvent.BUTTON1_DOWN_MASK;
        int b2 = MouseEvent.BUTTON2_DOWN_MASK;
        if ((evt.getModifiersEx() & (b1 | b2)) == b1) { // this checks that BUTTON1 is down but BUTTON2 is not
            int curX = evt.getXOnScreen();
            int curY = evt.getYOnScreen();
            if (getExtendedState() == NORMAL) {
                this.setLocation(curX - prevX, curY - prevY);
            }
        }
    }//GEN-LAST:event_titleBarMouseDragged

    private void minimizeLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeLabelMouseExited
        minimizeLabel.setIcon(new javax.swing.ImageIcon("src\\com\\algobuddy\\gui\\img\\minimizeLabel.png"));
    }//GEN-LAST:event_minimizeLabelMouseExited

    private void minimizeLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeLabelMouseEntered
        minimizeLabel.setIcon(new javax.swing.ImageIcon("src\\com\\algobuddy\\gui\\img\\minimizeLabelHover.png"));
    }//GEN-LAST:event_minimizeLabelMouseEntered

    private void minimizeLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeLabelMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) {
            extendedState = getExtendedState();
            setExtendedState(ICONIFIED);
        }
    }//GEN-LAST:event_minimizeLabelMouseClicked

    private void closeLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeLabelMouseExited
        closeLabel.setIcon(new javax.swing.ImageIcon("src\\com\\algobuddy\\gui\\img\\closeLabel.png"));
    }//GEN-LAST:event_closeLabelMouseExited

    private void closeLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeLabelMouseEntered
        closeLabel.setIcon(new javax.swing.ImageIcon("src\\com\\algobuddy\\gui\\img\\closeLabelHover.png"));
    }//GEN-LAST:event_closeLabelMouseEntered

    private void closeLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeLabelMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1)
            System.exit(0);
    }//GEN-LAST:event_closeLabelMouseClicked

    private void introTextLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_introTextLabelMouseExited
        introTextLabel.setForeground(new Color(172, 179, 186));
    }//GEN-LAST:event_introTextLabelMouseExited

    private void introTextLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_introTextLabelMouseEntered
        introTextLabel.setForeground(new Color(158, 164, 173));
    }//GEN-LAST:event_introTextLabelMouseEntered

    private void backLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backLabelMouseEntered
        backLabel.setIcon(new javax.swing.ImageIcon("src\\com\\algobuddy\\gui\\img\\backLabelHover.png"));
    }//GEN-LAST:event_backLabelMouseEntered

    private void backLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backLabelMouseExited
        backLabel.setIcon(new javax.swing.ImageIcon("src\\com\\algobuddy\\gui\\img\\backLabel.png"));
    }//GEN-LAST:event_backLabelMouseExited

    private void backLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backLabelMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) {
            if (getCurrentComponentName(mainPanel).equals("indexPanel")) {
                mainPanel.nextSlidingPanel(10, introPanel, JSlidingPane.Direction.Right);
                titleBar.setBackground(new Color(13, 8, 18));
                titleBar.setBorder(javax.swing.BorderFactory.createLineBorder(new Color(13, 8, 18)));
                backLabel.setVisible(false);
            }
            if (getCurrentComponentName(mainPanel).equals("graphIndexPanel")) {
                mainPanel.nextSlidingPanel(10, indexPanel, JSlidingPane.Direction.Right);
                titleBar.setBackground(new Color(18, 8, 13));
                titleBar.setBorder(javax.swing.BorderFactory.createLineBorder(new Color(18, 8, 13)));
            }
            if (getCurrentComponentName(mainPanel).equals("algoOverviewPanel")) {
                mainPanel.nextSlidingPanel(10, graphIndexPanel, JSlidingPane.Direction.Right);
                titleBar.setBackground(new Color(8, 13, 18));
                titleBar.setBorder(javax.swing.BorderFactory.createLineBorder(new Color(8, 13, 18)));
                nextLabel.setVisible(false);
                algoOverviewPanel.removeAll();
                GraphBoard.setCurrentAlgo(null);
            }
            if (getCurrentComponentName(mainPanel).equals("simulationPanel")) {
                if (GraphBoard.getCurrentAlgo() == "BFS") {
                    mainPanel.nextSlidingPanel(10, algoOverviewPanel, JSlidingPane.Direction.Right);
                    titleBar.setBackground(new Color(57, 55, 55));
                    titleBar.setBorder(javax.swing.BorderFactory.createLineBorder(new Color(57, 55, 55)));
                    nextLabel.setVisible(true);
                    openHtml(algoOverviewPanel, "src\\com\\algobuddy\\gui\\html\\bfs.htm");
                    simulationPanel.reset();
                    BorderLayout layout = (BorderLayout) simulationPanel.getLayout();
                    simulationPanel.remove(layout.getLayoutComponent(BorderLayout.CENTER));
                }
                if (GraphBoard.getCurrentAlgo() == "Dijkstra") {
                    mainPanel.nextSlidingPanel(10, algoOverviewPanel, JSlidingPane.Direction.Right);
                    titleBar.setBackground(new Color(57, 55, 55));
                    titleBar.setBorder(javax.swing.BorderFactory.createLineBorder(new Color(57, 55, 55)));
                    nextLabel.setVisible(true);
                    openHtml(algoOverviewPanel, "src\\com\\algobuddy\\gui\\html\\bfs.htm");
                    simulationPanel.reset();
                    BorderLayout layout = (BorderLayout) simulationPanel.getLayout();
                    simulationPanel.remove(layout.getLayoutComponent(BorderLayout.CENTER));
                }
            }
            if (getCurrentComponentName(mainPanel).equals("treeSimulationPanel")) {
                mainPanel.nextSlidingPanel(10, indexPanel, JSlidingPane.Direction.Right);
                titleBar.setBackground(new Color(18, 8, 13));
                titleBar.setBorder(javax.swing.BorderFactory.createLineBorder(new Color(18, 8, 13)));
            }
        }
    }//GEN-LAST:event_backLabelMouseClicked

    private void goToGraphButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_goToGraphButtonMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) {
            mainPanel.nextSlidingPanel(10, graphIndexPanel, JSlidingPane.Direction.Left);
            titleBar.setBackground(new Color(8, 13, 18));
            titleBar.setBorder(javax.swing.BorderFactory.createLineBorder(new Color(8, 13, 18)));
        }
    }//GEN-LAST:event_goToGraphButtonMouseClicked

    private void goToBfsButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_goToBfsButtonMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) {
            openHtml(algoOverviewPanel, "src\\com\\algobuddy\\gui\\html\\bfs.htm");
            mainPanel.nextSlidingPanel(10, algoOverviewPanel, JSlidingPane.Direction.Left);
            titleBar.setBackground(new Color(57, 55, 55));
            titleBar.setBorder(javax.swing.BorderFactory.createLineBorder(new Color(57, 55, 55)));
            nextLabel.setVisible(true);
            GraphBoard.setCurrentAlgo("BFS");
        }
    }//GEN-LAST:event_goToBfsButtonMouseClicked

    private void nextLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nextLabelMouseEntered
        nextLabel.setIcon(new javax.swing.ImageIcon("src\\com\\algobuddy\\gui\\img\\nextLabelHover.png"));
    }//GEN-LAST:event_nextLabelMouseEntered

    private void nextLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nextLabelMouseExited
        nextLabel.setIcon(new javax.swing.ImageIcon("src\\com\\algobuddy\\gui\\img\\nextLabel.png"));
    }//GEN-LAST:event_nextLabelMouseExited

    private void nextLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nextLabelMouseClicked
        if (getCurrentComponentName(mainPanel).equals("algoOverviewPanel")) {
            if (GraphBoard.getCurrentAlgo() == "BFS") {
                mainPanel.nextSlidingPanel(10, simulationPanel, JSlidingPane.Direction.Left);
                simulationPanel.add(new BFS(), java.awt.BorderLayout.CENTER);
                titleBar.setBackground(new Color(0, 14, 26));
                titleBar.setBorder(javax.swing.BorderFactory.createLineBorder(new Color(0, 14, 26)));
                nextLabel.setVisible(false);
                algoOverviewPanel.removeAll();
            }
            if (GraphBoard.getCurrentAlgo() == "Dijkstra") {
                mainPanel.nextSlidingPanel(10, simulationPanel, JSlidingPane.Direction.Left);
                simulationPanel.add(new Dijkstra(), java.awt.BorderLayout.CENTER);
                titleBar.setBackground(new Color(0, 14, 26));
                titleBar.setBorder(javax.swing.BorderFactory.createLineBorder(new Color(0, 14, 26)));
                nextLabel.setVisible(false);
                algoOverviewPanel.removeAll();
            }
        }
    }//GEN-LAST:event_nextLabelMouseClicked

    private void formWindowDeiconified(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowDeiconified
        setExtendedState(extendedState);
    }//GEN-LAST:event_formWindowDeiconified

    private void goToDijkstraButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_goToDijkstraButtonMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) {
            openHtml(algoOverviewPanel, "src\\com\\algobuddy\\gui\\html\\bfs.htm");
            mainPanel.nextSlidingPanel(10, algoOverviewPanel, JSlidingPane.Direction.Left);
            titleBar.setBackground(new Color(57, 55, 55));
            titleBar.setBorder(javax.swing.BorderFactory.createLineBorder(new Color(57, 55, 55)));
            nextLabel.setVisible(true);
            GraphBoard.setCurrentAlgo("Dijkstra");
        }
    }//GEN-LAST:event_goToDijkstraButtonMouseClicked

    private void functionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_functionActionPerformed
        if (evt.getSource() == function) {
            cur_id = function.getSelectedIndex();
            if (cur_id == 0) {
                holder.removeAll();
                holder.add(fPanel);
                holder.repaint();
                holder.revalidate();
            } else if (cur_id == 1) {
                holder.removeAll();
                holder.add(fpPanel);
                holder.repaint();
                holder.revalidate();
            } else if (cur_id == 2) {
                holder.removeAll();
                holder.add(bcPanel);
                holder.repaint();
                holder.revalidate();
            } else if (cur_id == 3) {
                holder.removeAll();
                holder.add(lcsPanel);
                holder.repaint();
                holder.revalidate();
            }
        }
    }//GEN-LAST:event_functionActionPerformed

    private void bc_k_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bc_k_fieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bc_k_fieldActionPerformed

    private void goToRecursionButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_goToRecursionButtonMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) {
            mainPanel.nextSlidingPanel(10, treeSimulationPanel, JSlidingPane.Direction.Left);
            titleBar.setBackground(new Color(1, 22, 39));
            titleBar.setBorder(javax.swing.BorderFactory.createLineBorder(new Color(1, 22, 39)));
            nextLabel.setVisible(false);
        }
    }//GEN-LAST:event_goToRecursionButtonMouseClicked

    private void memButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_memButtonActionPerformed
        if (memButton.isSelected()) {
            memButton.setIcon(new ImageIcon("src\\com\\algobuddy\\gui\\img\\switchOn.png"));
        } else {
            memButton.setIcon(new ImageIcon("src\\com\\algobuddy\\gui\\img\\switchOff.png"));
        }
    }//GEN-LAST:event_memButtonActionPerformed

    private void fiboRunLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fiboRunLabelMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) {
            if (recursionPanel.isPlaying) {
                if (recursionPanel.getRecursionWorker().isPaused()) {
                    recursionPanel.getRecursionWorker().resume();
                    fiboRunLabel.setIcon(new ImageIcon("src\\com\\algobuddy\\gui\\img\\pauseButton.png"));
                } else {
                    recursionPanel.getRecursionWorker().pause();
                    fiboRunLabel.setIcon(new ImageIcon("src\\com\\algobuddy\\gui\\img\\playEnabled.png"));
                }
            } else {
                fiboRunLabel.setIcon(new ImageIcon("src\\com\\algobuddy\\gui\\img\\pauseButton.png"));
                fiboResetLabel.setIcon(new ImageIcon("src\\com\\algobuddy\\gui\\img\\resetEnabled.png"));
                function.setEnabled(false);
                int num;
                try {
                    num = Integer.valueOf(input.getText());
                    if (memButton.isSelected()) {
                        Fibonacci fb = new Fibonacci(num);
                        ind2 = fb.getId1();
                        par2 = fb.getPa1();
                        lev2 = fb.getLev1();
                        val2 = fb.getV1();

                    } else {
                        Fibo_without_mem fb = new Fibo_without_mem(num);
                        ind2 = fb.getId1();
                        par2 = fb.getPa1();
                        lev2 = fb.getLev1();
                        val2 = fb.getV1();

                    }

                    if (ind2.size() >= 40) {
                        JOptionPane.showMessageDialog(this, "More than 40 call!",
                                "Error Message", JOptionPane.WARNING_MESSAGE);
                    } else {
                        artPanel.init();
                    }
                } catch (NumberFormatException expc) {
                    JOptionPane.showMessageDialog(this, "Please input integer value!",
                            "Error Message", JOptionPane.ERROR_MESSAGE);
                } catch (InterruptedException ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_fiboRunLabelMouseClicked

    private void fastPowerRunLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fastPowerRunLabelMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) {
            if (recursionPanel.isPlaying) {
                if (recursionPanel.getRecursionWorker().isPaused()) {
                    recursionPanel.getRecursionWorker().resume();
                    fastPowerRunLabel.setIcon(new ImageIcon("src\\com\\algobuddy\\gui\\img\\pauseButton.png"));
                } else {
                    recursionPanel.getRecursionWorker().pause();
                    fastPowerRunLabel.setIcon(new ImageIcon("src\\com\\algobuddy\\gui\\img\\playEnabled.png"));
                }
            } else {
                fastPowerRunLabel.setIcon(new ImageIcon("src\\com\\algobuddy\\gui\\img\\pauseButton.png"));
                function.setEnabled(false);
                int n, p;
                try {
                    n = Integer.valueOf(n_field.getText());
                    p = Integer.valueOf(p_field.getText());

                    FastPower fp = new FastPower(n, p);
                    ind2 = fp.getId1();
                    par2 = fp.getPa1();
                    lev2 = fp.getLev1();
                    val2 = fp.getV1();

                    if (n > 8 || p > 8) {
                        JOptionPane.showMessageDialog(this, "n and p should be less than 9",
                                "Error Message", JOptionPane.WARNING_MESSAGE);
                    } else if (ind2.size() >= 40) {
                        JOptionPane.showMessageDialog(this, "More than 40 call!",
                                "Error Message", JOptionPane.WARNING_MESSAGE);
                    } else {
                        artPanel.init();
                    }
                } catch (NumberFormatException expc) {
                    JOptionPane.showMessageDialog(this, "Please input integer value!",
                            "Error Message", JOptionPane.ERROR_MESSAGE);
                } catch (InterruptedException ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_fastPowerRunLabelMouseClicked

    private void bcRunLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bcRunLabelMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) {
            if (recursionPanel.isPlaying) {
                if (recursionPanel.getRecursionWorker().isPaused()) {
                    recursionPanel.getRecursionWorker().resume();
                    bcRunLabel.setIcon(new ImageIcon("src\\com\\algobuddy\\gui\\img\\pauseButton.png"));
                } else {
                    recursionPanel.getRecursionWorker().pause();
                    bcRunLabel.setIcon(new ImageIcon("src\\com\\algobuddy\\gui\\img\\playEnabled.png"));
                }
            } else {
                bcRunLabel.setIcon(new ImageIcon("src\\com\\algobuddy\\gui\\img\\pauseButton.png"));
                function.setEnabled(false);
                int n, k;
                try {
                    n = Integer.valueOf(bc_n_field.getText());
                    k = Integer.valueOf(bc_k_field.getText());
                    if (memButton.isSelected()) {
                        BinomialCoefficient bc = new BinomialCoefficient(n, k);
                        ind2 = bc.getId1();
                        par2 = bc.getPa1();
                        lev2 = bc.getLev1();
                        val2 = bc.getV1();
                    } else {
                        BinomialCoefficient_without_mem bc = new BinomialCoefficient_without_mem(n, k);
                        ind2 = bc.getId1();
                        par2 = bc.getPa1();
                        lev2 = bc.getLev1();
                        val2 = bc.getV1();
                    }
                    if (ind2.size() >= 40) {
                        JOptionPane.showMessageDialog(this, "More than 40 call!",
                                "Error Message", JOptionPane.WARNING_MESSAGE);
                    } else {
                        artPanel.init();
                    }

                } catch (NumberFormatException expc) {
                    JOptionPane.showMessageDialog(this, "Please input integer value!",
                            "Error Message", JOptionPane.ERROR_MESSAGE);
                } catch (InterruptedException ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_bcRunLabelMouseClicked

    private void lcsRunLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lcsRunLabelMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) {
            if (recursionPanel.isPlaying) {
                if (recursionPanel.getRecursionWorker().isPaused()) {
                    recursionPanel.getRecursionWorker().resume();
                    lcsRunLabel.setIcon(new ImageIcon("src\\com\\algobuddy\\gui\\img\\pauseButton.png"));
                } else {
                    recursionPanel.getRecursionWorker().pause();
                    lcsRunLabel.setIcon(new ImageIcon("src\\com\\algobuddy\\gui\\img\\playEnabled.png"));
                }
            } else {
                lcsRunLabel.setIcon(new ImageIcon("src\\com\\algobuddy\\gui\\img\\pauseButton.png"));
                function.setEnabled(false);
                int i, j;
                String a, b;
                try {
                    a = lcs_a_field.getText();
                    b = lcs_b_field.getText();
                    i = Integer.valueOf(lcs_i_field.getText());
                    j = Integer.valueOf(lcs_j_field.getText());

                    if (memButton.isSelected()) {
                        LCS lc = new LCS(a, b, i, j);
                        ind2 = lc.getId1();
                        par2 = lc.getPa1();
                        lev2 = lc.getLev1();
                        val2 = lc.getV1();
                    } else {
                        LCS_without_mem lc = new LCS_without_mem(a, b, i, j);
                        ind2 = lc.getId1();
                        par2 = lc.getPa1();
                        lev2 = lc.getLev1();
                        val2 = lc.getV1();
                    }

                    if (ind2.size() >= 40) {
                        JOptionPane.showMessageDialog(this, "More than 40 call!",
                                "Error Message", JOptionPane.WARNING_MESSAGE);
                    } else {
                        artPanel.init();
                    }

                } catch (NumberFormatException expc) {
                    JOptionPane.showMessageDialog(this, "Please input integer value!",
                            "Error Message", JOptionPane.ERROR_MESSAGE);
                } catch (InterruptedException ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_lcsRunLabelMouseClicked

    private void fiboResetLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fiboResetLabelMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) {
            artPanel.reset();
            function.setEnabled(true);
            fiboResetLabel.setIcon(new ImageIcon("src\\com\\algobuddy\\gui\\img\\resetDisabled.png"));
            fpResetLabel.setIcon(new ImageIcon("src\\com\\algobuddy\\gui\\img\\resetDisabled.png"));
            bcResetLabel.setIcon(new ImageIcon("src\\com\\algobuddy\\gui\\img\\resetDisabled.png"));
            lcsResetLabel.setIcon(new ImageIcon("src\\com\\algobuddy\\gui\\img\\resetDisabled.png"));
            fiboRunLabel.setIcon(new ImageIcon("src\\com\\algobuddy\\gui\\img\\playEnabled.png"));
            fastPowerRunLabel.setIcon(new ImageIcon("src\\com\\algobuddy\\gui\\img\\playEnabled.png"));
            bcRunLabel.setIcon(new ImageIcon("src\\com\\algobuddy\\gui\\img\\playEnabled.png"));
            lcsRunLabel.setIcon(new ImageIcon("src\\com\\algobuddy\\gui\\img\\playEnabled.png"));
        }
    }//GEN-LAST:event_fiboResetLabelMouseClicked

    private void fpResetLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fpResetLabelMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) {
            artPanel.reset();
            function.setEnabled(true);
            fiboResetLabel.setIcon(new ImageIcon("src\\com\\algobuddy\\gui\\img\\resetDisabled.png"));
            fpResetLabel.setIcon(new ImageIcon("src\\com\\algobuddy\\gui\\img\\resetDisabled.png"));
            bcResetLabel.setIcon(new ImageIcon("src\\com\\algobuddy\\gui\\img\\resetDisabled.png"));
            lcsResetLabel.setIcon(new ImageIcon("src\\com\\algobuddy\\gui\\img\\resetDisabled.png"));
            fiboRunLabel.setIcon(new ImageIcon("src\\com\\algobuddy\\gui\\img\\playEnabled.png"));
            fastPowerRunLabel.setIcon(new ImageIcon("src\\com\\algobuddy\\gui\\img\\playEnabled.png"));
            bcRunLabel.setIcon(new ImageIcon("src\\com\\algobuddy\\gui\\img\\playEnabled.png"));
            lcsRunLabel.setIcon(new ImageIcon("src\\com\\algobuddy\\gui\\img\\playEnabled.png"));
        }
    }//GEN-LAST:event_fpResetLabelMouseClicked

    private void bcResetLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bcResetLabelMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) {
            artPanel.reset();
            function.setEnabled(true);
            fiboResetLabel.setIcon(new ImageIcon("src\\com\\algobuddy\\gui\\img\\resetDisabled.png"));
            fpResetLabel.setIcon(new ImageIcon("src\\com\\algobuddy\\gui\\img\\resetDisabled.png"));
            bcResetLabel.setIcon(new ImageIcon("src\\com\\algobuddy\\gui\\img\\resetDisabled.png"));
            lcsResetLabel.setIcon(new ImageIcon("src\\com\\algobuddy\\gui\\img\\resetDisabled.png"));
            fiboRunLabel.setIcon(new ImageIcon("src\\com\\algobuddy\\gui\\img\\playEnabled.png"));
            fastPowerRunLabel.setIcon(new ImageIcon("src\\com\\algobuddy\\gui\\img\\playEnabled.png"));
            bcRunLabel.setIcon(new ImageIcon("src\\com\\algobuddy\\gui\\img\\playEnabled.png"));
            lcsRunLabel.setIcon(new ImageIcon("src\\com\\algobuddy\\gui\\img\\playEnabled.png"));
        }
    }//GEN-LAST:event_bcResetLabelMouseClicked

    private void lcsResetLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lcsResetLabelMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) {
            artPanel.reset();
            function.setEnabled(true);
            fiboResetLabel.setIcon(new ImageIcon("src\\com\\algobuddy\\gui\\img\\resetDisabled.png"));
            fpResetLabel.setIcon(new ImageIcon("src\\com\\algobuddy\\gui\\img\\resetDisabled.png"));
            bcResetLabel.setIcon(new ImageIcon("src\\com\\algobuddy\\gui\\img\\resetDisabled.png"));
            lcsResetLabel.setIcon(new ImageIcon("src\\com\\algobuddy\\gui\\img\\resetDisabled.png"));
            fiboRunLabel.setIcon(new ImageIcon("src\\com\\algobuddy\\gui\\img\\playEnabled.png"));
            fastPowerRunLabel.setIcon(new ImageIcon("src\\com\\algobuddy\\gui\\img\\playEnabled.png"));
            bcRunLabel.setIcon(new ImageIcon("src\\com\\algobuddy\\gui\\img\\playEnabled.png"));
            lcsRunLabel.setIcon(new ImageIcon("src\\com\\algobuddy\\gui\\img\\playEnabled.png"));
        }
    }//GEN-LAST:event_lcsResetLabelMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        try {
            UIManager.setLookAndFeel(new FlatNightOwlIJTheme());
            UIManager.put("Button.arc", 0);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            mainFrame = new MainFrame();
            mainFrame.setVisible(true);
        });
    }

    private class EnterAction extends AbstractAction {

        @Override
        public void actionPerformed(ActionEvent e) {
            if (getCurrentComponentName(mainPanel).equals("introPanel")) {
                mainPanel.nextSlidingPanel(10, indexPanel, JSlidingPane.Direction.Down);
                titleBar.setBackground(new Color(18, 8, 13));
                titleBar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(18, 8, 13)));
                backLabel.setVisible(true);
            }
        }
    }

    private String getCurrentComponentName(Container parent) {
        String compName = null;
        Component comp = null;
        int n = parent.getComponentCount();
        for (int i = 0; i < n; i++) {
            comp = parent.getComponent(i);
            if (comp.isVisible()) {
                compName = comp.getName();
            }
        }
        return compName;
    }

    private void openHtml(final JPanel panel, String filePath) {
        panel.setLayout(new FlowLayout());

        JEditorPane jEditorPane = new JEditorPane();
        jEditorPane.setEditable(false);
        jEditorPane.setBackground(new Color(57, 55, 55));

        jEditorPane.addHyperlinkListener((HyperlinkEvent e) -> {
            if (e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {
                if (Desktop.isDesktopSupported()) {
                    try {
                        Desktop.getDesktop().browse(e.getURL().toURI());
                    } catch (URISyntaxException | IOException ex) {
                        Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        });

        try {
            jEditorPane.setPage(new File(filePath).toURI().toURL());
        } catch (IOException e) {
            jEditorPane.setContentType("text/html");
            jEditorPane.setText("<html>Page not found.</html>");
        }

        JScrollPane jScrollPane = new JScrollPane(jEditorPane);
        jScrollPane.setViewportBorder(null);
        jScrollPane.setBorder(null);
        jScrollPane.setPreferredSize(new Dimension(780, 595));
        jScrollPane.getVerticalScrollBar().setBackground(new Color(57, 55, 55));
        jScrollPane.getVerticalScrollBar().setUI(new BasicScrollBarUI() {
            @Override
            protected void configureScrollBarColors() {
                this.thumbColor = new Color(18, 19, 18);
            }

            @Override
            protected Dimension getMaximumThumbSize() {
                return new Dimension(0, 40);
            }

            @Override
            protected JButton createIncreaseButton(int i) {
                return new ScrollBarButton();
            }

            @Override
            protected JButton createDecreaseButton(int i) {
                return new ScrollBarButton();
            }

            @Override
            protected void paintTrack(Graphics grphcs, JComponent jc, Rectangle rctngl) {
                Graphics2D g2 = (Graphics2D) grphcs;
                g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
                int width = rctngl.width / 2;
                int x = rctngl.x + ((rctngl.width - width) / 2);
                g2.setColor(new Color(178, 178, 178));
                g2.fillRect(x, rctngl.y, width, rctngl.height - 10);
            }

            @Override
            protected void paintThumb(Graphics grphcs, JComponent jc, Rectangle rctngl) {
                Graphics2D g2 = (Graphics2D) grphcs;
                g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
                int x = rctngl.x;
                int y = rctngl.y;
                g2.setColor(new Color(38, 36, 36));
                g2.fillRect(x, y, 9, 30);
            }

            private class ScrollBarButton extends JButton {

                public ScrollBarButton() {
                    setBorder(BorderFactory.createEmptyBorder(7, 0, 0, 0));
                }

                @Override
                public void paint(Graphics grphcs) {
                }
            }
        });

        panel.add(jScrollPane);
    }

    static MainFrame getMainFrame() {
        return mainFrame;
    }

    static JSlidingPane getMainPanel() {
        return mainPanel;
    }

    static ArrayList<ArrayList<Integer>> getIndex() {
        return ind2;
    }

    static int[] getPar() {
        return par2;
    }

    static int[] getLev() {
        return lev2;
    }

    static int[] getVal() {
        return val2;
    }

    public static GraphPanel getSimPanel() {
        return simulationPanel;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel algoOverviewPanel;
    private com.algobuddy.gui.recursionPanel artPanel;
    private javax.swing.JLabel backLabel;
    private javax.swing.JPanel bcPanel;
    private javax.swing.JLabel bcResetLabel;
    public static javax.swing.JLabel bcRunLabel;
    private javax.swing.JTextField bc_k_field;
    private javax.swing.JLabel bc_k_label;
    private javax.swing.JTextField bc_n_field;
    private javax.swing.JLabel bc_n_label;
    private javax.swing.JLabel closeLabel;
    private javax.swing.JPanel comPanel;
    private javax.swing.JPanel fPanel;
    public static javax.swing.JLabel fastPowerRunLabel;
    private javax.swing.JLabel fiboResetLabel;
    public static javax.swing.JLabel fiboRunLabel;
    private javax.swing.JPanel fpPanel;
    private javax.swing.JLabel fpResetLabel;
    private javax.swing.JComboBox<String> function;
    private javax.swing.JButton goToBfsButton;
    private javax.swing.JButton goToDfsButton;
    private javax.swing.JButton goToDijkstraButton;
    private javax.swing.JButton goToGraphButton;
    private javax.swing.JButton goToMstButton;
    private javax.swing.JButton goToRecursionButton;
    private javax.swing.JButton goToSortButton;
    private javax.swing.JLabel graphIndexLabel;
    private keeptoo.KGradientPanel graphIndexPanel;
    private javax.swing.JPanel holder;
    private javax.swing.JLabel indexLabel;
    private keeptoo.KGradientPanel indexPanel;
    private javax.swing.JTextField input;
    private javax.swing.JLabel introGifLabel;
    private javax.swing.JLabel introLogoLabel;
    private keeptoo.KGradientPanel introPanel;
    private javax.swing.JLabel introTextLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextArea jTextArea4;
    private javax.swing.JPanel lcsPanel;
    private javax.swing.JLabel lcsResetLabel;
    public static javax.swing.JLabel lcsRunLabel;
    private javax.swing.JTextField lcs_a_field;
    private javax.swing.JTextField lcs_b_field;
    private javax.swing.JTextField lcs_i_field;
    private javax.swing.JTextField lcs_j_field;
    private static com.algobuddy.gui.JSlidingPane mainPanel;
    private javax.swing.JRadioButton memButton;
    private javax.swing.JLabel minimizeLabel;
    private javax.swing.JTextField n_field;
    private javax.swing.JLabel n_label;
    private javax.swing.JLabel nextLabel;
    private javax.swing.JTextField p_field;
    private javax.swing.JLabel p_label;
    private static com.algobuddy.gui.GraphPanel simulationPanel;
    private javax.swing.JPanel titleBar;
    private javax.swing.JPanel treeSimulationPanel;
    private javax.swing.JButton userManualButton;
    // End of variables declaration//GEN-END:variables
}
