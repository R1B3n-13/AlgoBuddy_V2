package com.algobuddy.gui;

import com.algobuddy.graphalgos.BFS;
import com.algobuddy.graphalgos.Dijkstra;
import com.formdev.flatlaf.intellijthemes.materialthemeuilite.FlatNightOwlIJTheme;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Container;
import java.awt.Desktop;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.event.ActionEvent;
import java.awt.event.MouseEvent;
import java.io.File;
import java.io.IOException;
import java.net.URISyntaxException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JEditorPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.KeyStroke;
import javax.swing.UIManager;
import javax.swing.event.HyperlinkEvent;
import javax.swing.plaf.basic.BasicScrollBarUI;

/**
 *
 * @author nebir, nazrul
 */
public class MainFrame extends javax.swing.JFrame {

    private int prevX, prevY, extendedState = NORMAL;
    private Action enterAction;
    private static MainFrame mainFrame;

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        enterAction = new EnterAction();
        introPanel.getInputMap().put(KeyStroke.getKeyStroke("ENTER"), "enter");
        introPanel.getActionMap().put("enter", enterAction);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleBar = new javax.swing.JPanel();
        closeLabel = new javax.swing.JLabel();
        minimizeLabel = new javax.swing.JLabel();
        backLabel = new javax.swing.JLabel();
        nextLabel = new javax.swing.JLabel();
        mainPanel = new com.algobuddy.gui.JSlidingPane();
        introPanel = new keeptoo.KGradientPanel();
        introLogoLabel = new javax.swing.JLabel();
        introTextLabel = new javax.swing.JLabel();
        introGifLabel = new javax.swing.JLabel();
        indexPanel = new keeptoo.KGradientPanel();
        indexLabel = new javax.swing.JLabel();
        goToGraphButton = new javax.swing.JButton();
        goToSortButton = new javax.swing.JButton();
        goToRecursionButton = new javax.swing.JButton();
        userManualButton = new javax.swing.JButton();
        graphIndexPanel = new keeptoo.KGradientPanel();
        graphIndexLabel = new javax.swing.JLabel();
        goToBfsButton = new javax.swing.JButton();
        goToDijkstraButton = new javax.swing.JButton();
        goToDfsButton = new javax.swing.JButton();
        goToMstButton = new javax.swing.JButton();
        algoOverviewPanel = new javax.swing.JPanel();
        simulationPanel = new com.algobuddy.gui.GraphPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowDeiconified(java.awt.event.WindowEvent evt) {
                formWindowDeiconified(evt);
            }
        });

        titleBar.setBackground(new java.awt.Color(13, 8, 18));
        titleBar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(13, 8, 18)));
        titleBar.setPreferredSize(new java.awt.Dimension(800, 25));
        titleBar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                titleBarMouseDragged(evt);
            }
        });
        titleBar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                titleBarMousePressed(evt);
            }
        });

        closeLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/algobuddy/gui/img/closeLabel.png"))); // NOI18N
        closeLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                closeLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                closeLabelMouseExited(evt);
            }
        });

        minimizeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        minimizeLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/algobuddy/gui/img/minimizeLabel.png"))); // NOI18N
        minimizeLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                minimizeLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                minimizeLabelMouseExited(evt);
            }
        });

        backLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        backLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/algobuddy/gui/img/backLabel.png"))); // NOI18N
        backLabel.setVisible(false);
        backLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                backLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                backLabelMouseExited(evt);
            }
        });

        nextLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/algobuddy/gui/img/nextLabel.png"))); // NOI18N
        nextLabel.setVisible(false);
        nextLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nextLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                nextLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                nextLabelMouseExited(evt);
            }
        });

        javax.swing.GroupLayout titleBarLayout = new javax.swing.GroupLayout(titleBar);
        titleBar.setLayout(titleBarLayout);
        titleBarLayout.setHorizontalGroup(
            titleBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, titleBarLayout.createSequentialGroup()
                .addComponent(backLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nextLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 720, Short.MAX_VALUE)
                .addComponent(minimizeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(closeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        titleBarLayout.setVerticalGroup(
            titleBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(closeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
            .addComponent(minimizeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(backLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(nextLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getContentPane().add(titleBar, java.awt.BorderLayout.PAGE_START);

        introPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(13, 8, 18)));
        introPanel.setkEndColor(new java.awt.Color(18, 5, 32));
        introPanel.setkStartColor(new java.awt.Color(10, 10, 15));
        introPanel.setName("introPanel"); // NOI18N
        introPanel.setPreferredSize(new java.awt.Dimension(800, 600));

        introLogoLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        introLogoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/algobuddy/gui/img/introLogo.png"))); // NOI18N

        introTextLabel.setBackground(new java.awt.Color(205, 214, 224));
        introTextLabel.setFont(new java.awt.Font("Baskerville Old Face", 1, 72)); // NOI18N
        introTextLabel.setForeground(new java.awt.Color(172, 179, 186));
        introTextLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        introTextLabel.setText("AlgoBuddy");
        introTextLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        introTextLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                introTextLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                introTextLabelMouseExited(evt);
            }
        });

        introGifLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        introGifLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/algobuddy/gui/img/introGifLabel.gif"))); // NOI18N
        introGifLabel.setName(""); // NOI18N

        javax.swing.GroupLayout introPanelLayout = new javax.swing.GroupLayout(introPanel);
        introPanel.setLayout(introPanelLayout);
        introPanelLayout.setHorizontalGroup(
            introPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(introPanelLayout.createSequentialGroup()
                .addGroup(introPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(introPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(introGifLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 786, Short.MAX_VALUE))
                    .addGroup(introPanelLayout.createSequentialGroup()
                        .addGap(227, 227, 227)
                        .addComponent(introTextLabel)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(introPanelLayout.createSequentialGroup()
                .addGap(358, 358, 358)
                .addComponent(introLogoLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        introPanelLayout.setVerticalGroup(
            introPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(introPanelLayout.createSequentialGroup()
                .addGap(154, 154, 154)
                .addComponent(introLogoLabel)
                .addGap(18, 18, 18)
                .addComponent(introTextLabel)
                .addGap(18, 18, 18)
                .addComponent(introGifLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(212, Short.MAX_VALUE))
        );

        mainPanel.add(introPanel, "introPanel");

        indexPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(18, 8, 13)));
        indexPanel.setkEndColor(new java.awt.Color(32, 5, 18));
        indexPanel.setkStartColor(new java.awt.Color(15, 10, 10));
        indexPanel.setName("indexPanel"); // NOI18N
        indexPanel.setPreferredSize(new java.awt.Dimension(800, 600));

        indexLabel.setFont(new java.awt.Font("Georgia", 0, 48)); // NOI18N
        indexLabel.setForeground(new java.awt.Color(157, 162, 173));
        indexLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        indexLabel.setText("INDEX");

        goToGraphButton.setBackground(new java.awt.Color(101, 89, 94, 50));
        goToGraphButton.setFont(new java.awt.Font("Cambria", 1, 20)); // NOI18N
        goToGraphButton.setForeground(new java.awt.Color(172, 179, 186));
        goToGraphButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/algobuddy/gui/img/graphLogo.png"))); // NOI18N
        goToGraphButton.setText("Graph Algorithms");
        goToGraphButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 10));
        goToGraphButton.setBorderPainted(false);
        goToGraphButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        goToGraphButton.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        goToGraphButton.setIconTextGap(20);
        goToGraphButton.setMaximumSize(new java.awt.Dimension(244, 72));
        goToGraphButton.setMinimumSize(new java.awt.Dimension(244, 72));
        goToGraphButton.setPreferredSize(new java.awt.Dimension(244, 72));
        goToGraphButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                goToGraphButtonMouseClicked(evt);
            }
        });

        goToSortButton.setBackground(new java.awt.Color(101, 89, 94, 50));
        goToSortButton.setFont(new java.awt.Font("Cambria", 1, 17)); // NOI18N
        goToSortButton.setForeground(new java.awt.Color(172, 179, 186));
        goToSortButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/algobuddy/gui/img/recursionTreeLogo.png"))); // NOI18N
        goToSortButton.setText("Recursion Tree Builder");
        goToSortButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 10));
        goToSortButton.setBorderPainted(false);
        goToSortButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        goToSortButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        goToSortButton.setIconTextGap(14);
        goToSortButton.setMaximumSize(new java.awt.Dimension(244, 72));
        goToSortButton.setMinimumSize(new java.awt.Dimension(244, 72));
        goToSortButton.setPreferredSize(new java.awt.Dimension(244, 72));

        goToRecursionButton.setBackground(new java.awt.Color(101, 89, 94, 50));
        goToRecursionButton.setFont(new java.awt.Font("Cambria", 1, 20)); // NOI18N
        goToRecursionButton.setForeground(new java.awt.Color(172, 179, 186));
        goToRecursionButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/algobuddy/gui/img/sortLogo.png"))); // NOI18N
        goToRecursionButton.setText("Sorting Algorithms");
        goToRecursionButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 10));
        goToRecursionButton.setBorderPainted(false);
        goToRecursionButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        goToRecursionButton.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        goToRecursionButton.setIconTextGap(20);
        goToRecursionButton.setMaximumSize(new java.awt.Dimension(244, 72));
        goToRecursionButton.setMinimumSize(new java.awt.Dimension(244, 72));
        goToRecursionButton.setPreferredSize(new java.awt.Dimension(244, 72));

        userManualButton.setBackground(new java.awt.Color(101, 89, 94, 50));
        userManualButton.setFont(new java.awt.Font("Cambria", 1, 20)); // NOI18N
        userManualButton.setForeground(new java.awt.Color(172, 179, 186));
        userManualButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/algobuddy/gui/img/manualLogo.png"))); // NOI18N
        userManualButton.setText("User Manual");
        userManualButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 10));
        userManualButton.setBorderPainted(false);
        userManualButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        userManualButton.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        userManualButton.setIconTextGap(38);
        userManualButton.setMaximumSize(new java.awt.Dimension(244, 72));
        userManualButton.setMinimumSize(new java.awt.Dimension(244, 72));
        userManualButton.setPreferredSize(new java.awt.Dimension(244, 72));

        javax.swing.GroupLayout indexPanelLayout = new javax.swing.GroupLayout(indexPanel);
        indexPanel.setLayout(indexPanelLayout);
        indexPanelLayout.setHorizontalGroup(
            indexPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(indexPanelLayout.createSequentialGroup()
                .addContainerGap(277, Short.MAX_VALUE)
                .addGroup(indexPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(userManualButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(indexPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(goToGraphButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(goToRecursionButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(goToSortButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(indexLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(277, Short.MAX_VALUE))
        );
        indexPanelLayout.setVerticalGroup(
            indexPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(indexPanelLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(indexLabel)
                .addGap(45, 45, 45)
                .addComponent(goToGraphButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(goToRecursionButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(goToSortButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(userManualButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(152, Short.MAX_VALUE))
        );

        mainPanel.add(indexPanel, "indexPanel");

        graphIndexPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(8, 13, 18)));
        graphIndexPanel.setkEndColor(new java.awt.Color(5, 18, 32));
        graphIndexPanel.setkStartColor(new java.awt.Color(10, 10, 15));
        graphIndexPanel.setName("graphIndexPanel"); // NOI18N
        graphIndexPanel.setPreferredSize(new java.awt.Dimension(800, 600));

        graphIndexLabel.setFont(new java.awt.Font("Georgia", 0, 36)); // NOI18N
        graphIndexLabel.setForeground(new java.awt.Color(157, 162, 173));
        graphIndexLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        graphIndexLabel.setText("GRAPH ALGORITHMS");

        goToBfsButton.setBackground(new java.awt.Color(89, 94, 101, 50));
        goToBfsButton.setFont(new java.awt.Font("Cambria", 1, 20)); // NOI18N
        goToBfsButton.setForeground(new java.awt.Color(172, 179, 186));
        goToBfsButton.setText("Breadth First Search");
        goToBfsButton.setBorder(null);
        goToBfsButton.setBorderPainted(false);
        goToBfsButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        goToBfsButton.setMaximumSize(new java.awt.Dimension(244, 72));
        goToBfsButton.setMinimumSize(new java.awt.Dimension(244, 72));
        goToBfsButton.setPreferredSize(new java.awt.Dimension(244, 72));
        goToBfsButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                goToBfsButtonMouseClicked(evt);
            }
        });

        goToDijkstraButton.setBackground(new java.awt.Color(89, 94, 101, 50));
        goToDijkstraButton.setFont(new java.awt.Font("Cambria", 1, 20)); // NOI18N
        goToDijkstraButton.setForeground(new java.awt.Color(172, 179, 186));
        goToDijkstraButton.setText("Dijkstra");
        goToDijkstraButton.setBorder(null);
        goToDijkstraButton.setBorderPainted(false);
        goToDijkstraButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        goToDijkstraButton.setMaximumSize(new java.awt.Dimension(244, 72));
        goToDijkstraButton.setMinimumSize(new java.awt.Dimension(244, 72));
        goToDijkstraButton.setPreferredSize(new java.awt.Dimension(244, 72));
        goToDijkstraButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                goToDijkstraButtonMouseClicked(evt);
            }
        });

        goToDfsButton.setBackground(new java.awt.Color(89, 94, 101, 50));
        goToDfsButton.setFont(new java.awt.Font("Cambria", 1, 20)); // NOI18N
        goToDfsButton.setForeground(new java.awt.Color(172, 179, 186));
        goToDfsButton.setText("Depth First Search");
        goToDfsButton.setBorder(null);
        goToDfsButton.setBorderPainted(false);
        goToDfsButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        goToDfsButton.setMaximumSize(new java.awt.Dimension(244, 72));
        goToDfsButton.setMinimumSize(new java.awt.Dimension(244, 72));
        goToDfsButton.setPreferredSize(new java.awt.Dimension(244, 72));

        goToMstButton.setBackground(new java.awt.Color(89, 94, 101, 50));
        goToMstButton.setFont(new java.awt.Font("Cambria", 1, 20)); // NOI18N
        goToMstButton.setForeground(new java.awt.Color(172, 179, 186));
        goToMstButton.setText("Minimum Spanning Tree");
        goToMstButton.setBorder(null);
        goToMstButton.setBorderPainted(false);
        goToMstButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        goToMstButton.setMaximumSize(new java.awt.Dimension(244, 72));
        goToMstButton.setMinimumSize(new java.awt.Dimension(244, 72));
        goToMstButton.setPreferredSize(new java.awt.Dimension(244, 72));

        javax.swing.GroupLayout graphIndexPanelLayout = new javax.swing.GroupLayout(graphIndexPanel);
        graphIndexPanel.setLayout(graphIndexPanelLayout);
        graphIndexPanelLayout.setHorizontalGroup(
            graphIndexPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(graphIndexPanelLayout.createSequentialGroup()
                .addGroup(graphIndexPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(graphIndexPanelLayout.createSequentialGroup()
                        .addGap(210, 210, 210)
                        .addComponent(graphIndexLabel))
                    .addGroup(graphIndexPanelLayout.createSequentialGroup()
                        .addGap(277, 277, 277)
                        .addGroup(graphIndexPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(goToDfsButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(goToBfsButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(goToDijkstraButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(goToMstButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(211, Short.MAX_VALUE))
        );
        graphIndexPanelLayout.setVerticalGroup(
            graphIndexPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(graphIndexPanelLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(graphIndexLabel)
                .addGap(18, 18, 18)
                .addComponent(goToBfsButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(goToDfsButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(goToDijkstraButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(goToMstButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(191, Short.MAX_VALUE))
        );

        mainPanel.add(graphIndexPanel, "graphIndexPanel");

        algoOverviewPanel.setBackground(new java.awt.Color(57, 55, 55));
        algoOverviewPanel.setName("algoOverviewPanel"); // NOI18N

        javax.swing.GroupLayout algoOverviewPanelLayout = new javax.swing.GroupLayout(algoOverviewPanel);
        algoOverviewPanel.setLayout(algoOverviewPanelLayout);
        algoOverviewPanelLayout.setHorizontalGroup(
            algoOverviewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
        );
        algoOverviewPanelLayout.setVerticalGroup(
            algoOverviewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
        );

        mainPanel.add(algoOverviewPanel, "bfsOverviewPanel");

        simulationPanel.setName("simulationPanel"); // NOI18N
        mainPanel.add(simulationPanel, "bfsSimulationPanel");

        getContentPane().add(mainPanel, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void titleBarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_titleBarMousePressed
        if (evt.getButton() == MouseEvent.BUTTON1) {
            prevX = evt.getX();
            prevY = evt.getY();
        }
    }//GEN-LAST:event_titleBarMousePressed

    private void titleBarMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_titleBarMouseDragged
        int b1 = MouseEvent.BUTTON1_DOWN_MASK;
        int b2 = MouseEvent.BUTTON2_DOWN_MASK;
        if ((evt.getModifiersEx() & (b1 | b2)) == b1) { // this checks that BUTTON1 is down but BUTTON2 is not
            int curX = evt.getXOnScreen();
            int curY = evt.getYOnScreen();
            if (getExtendedState() == NORMAL) {
                this.setLocation(curX - prevX, curY - prevY);
            }
        }
    }//GEN-LAST:event_titleBarMouseDragged

    private void minimizeLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeLabelMouseExited
        minimizeLabel.setIcon(new javax.swing.ImageIcon("src\\com\\algobuddy\\gui\\img\\minimizeLabel.png"));
    }//GEN-LAST:event_minimizeLabelMouseExited

    private void minimizeLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeLabelMouseEntered
        minimizeLabel.setIcon(new javax.swing.ImageIcon("src\\com\\algobuddy\\gui\\img\\minimizeLabelHover.png"));
    }//GEN-LAST:event_minimizeLabelMouseEntered

    private void minimizeLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeLabelMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) {
            extendedState = getExtendedState();
            setExtendedState(ICONIFIED);
        }
    }//GEN-LAST:event_minimizeLabelMouseClicked

    private void closeLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeLabelMouseExited
        closeLabel.setIcon(new javax.swing.ImageIcon("src\\com\\algobuddy\\gui\\img\\closeLabel.png"));
    }//GEN-LAST:event_closeLabelMouseExited

    private void closeLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeLabelMouseEntered
        closeLabel.setIcon(new javax.swing.ImageIcon("src\\com\\algobuddy\\gui\\img\\closeLabelHover.png"));
    }//GEN-LAST:event_closeLabelMouseEntered

    private void closeLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeLabelMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1)
            System.exit(0);
    }//GEN-LAST:event_closeLabelMouseClicked

    private void introTextLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_introTextLabelMouseExited
        introTextLabel.setForeground(new Color(172, 179, 186));
    }//GEN-LAST:event_introTextLabelMouseExited

    private void introTextLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_introTextLabelMouseEntered
        introTextLabel.setForeground(new Color(158, 164, 173));
    }//GEN-LAST:event_introTextLabelMouseEntered

    private void backLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backLabelMouseEntered
        backLabel.setIcon(new javax.swing.ImageIcon("src\\com\\algobuddy\\gui\\img\\backLabelHover.png"));
    }//GEN-LAST:event_backLabelMouseEntered

    private void backLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backLabelMouseExited
        backLabel.setIcon(new javax.swing.ImageIcon("src\\com\\algobuddy\\gui\\img\\backLabel.png"));
    }//GEN-LAST:event_backLabelMouseExited

    private void backLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backLabelMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) {
            if (getCurrentComponentName(mainPanel).equals("indexPanel")) {
                mainPanel.nextSlidingPanel(10, introPanel, JSlidingPane.Direction.Right);
                titleBar.setBackground(new Color(13, 8, 18));
                titleBar.setBorder(javax.swing.BorderFactory.createLineBorder(new Color(13, 8, 18)));
                backLabel.setVisible(false);
            }
            if (getCurrentComponentName(mainPanel).equals("graphIndexPanel")) {
                mainPanel.nextSlidingPanel(10, indexPanel, JSlidingPane.Direction.Right);
                titleBar.setBackground(new Color(18, 8, 13));
                titleBar.setBorder(javax.swing.BorderFactory.createLineBorder(new Color(18, 8, 13)));
            }
            if (getCurrentComponentName(mainPanel).equals("algoOverviewPanel")) {
                mainPanel.nextSlidingPanel(10, graphIndexPanel, JSlidingPane.Direction.Right);
                titleBar.setBackground(new Color(8, 13, 18));
                titleBar.setBorder(javax.swing.BorderFactory.createLineBorder(new Color(8, 13, 18)));
                nextLabel.setVisible(false);
                algoOverviewPanel.removeAll();
                GraphBoard.setCurrentAlgo(null);
            }
            if (getCurrentComponentName(mainPanel).equals("simulationPanel")) {
                if (GraphBoard.getCurrentAlgo() == "BFS") {
                    mainPanel.nextSlidingPanel(10, algoOverviewPanel, JSlidingPane.Direction.Right);
                    titleBar.setBackground(new Color(57, 55, 55));
                    titleBar.setBorder(javax.swing.BorderFactory.createLineBorder(new Color(57, 55, 55)));
                    nextLabel.setVisible(true);
                    openHtml(algoOverviewPanel, "src\\com\\algobuddy\\gui\\html\\bfs.htm");
                    simulationPanel.reset();
                    BorderLayout layout = (BorderLayout) this.getLayout();
                    simulationPanel.remove(layout.getLayoutComponent(BorderLayout.CENTER));
                }
                if (GraphBoard.getCurrentAlgo() == "Dijkstra") {
                    mainPanel.nextSlidingPanel(10, algoOverviewPanel, JSlidingPane.Direction.Right);
                    titleBar.setBackground(new Color(57, 55, 55));
                    titleBar.setBorder(javax.swing.BorderFactory.createLineBorder(new Color(57, 55, 55)));
                    nextLabel.setVisible(true);
                    openHtml(algoOverviewPanel, "src\\com\\algobuddy\\gui\\html\\bfs.htm");
                    simulationPanel.reset();
                    BorderLayout layout = (BorderLayout) this.getLayout();
                    simulationPanel.remove(layout.getLayoutComponent(BorderLayout.CENTER));
                }
            }
        }
    }//GEN-LAST:event_backLabelMouseClicked

    private void goToGraphButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_goToGraphButtonMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) {
            mainPanel.nextSlidingPanel(10, graphIndexPanel, JSlidingPane.Direction.Left);
            titleBar.setBackground(new Color(8, 13, 18));
            titleBar.setBorder(javax.swing.BorderFactory.createLineBorder(new Color(8, 13, 18)));
        }
    }//GEN-LAST:event_goToGraphButtonMouseClicked

    private void goToBfsButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_goToBfsButtonMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) {
            openHtml(algoOverviewPanel, "src\\com\\algobuddy\\gui\\html\\bfs.htm");
            mainPanel.nextSlidingPanel(10, algoOverviewPanel, JSlidingPane.Direction.Left);
            titleBar.setBackground(new Color(57, 55, 55));
            titleBar.setBorder(javax.swing.BorderFactory.createLineBorder(new Color(57, 55, 55)));
            nextLabel.setVisible(true);
            GraphBoard.setCurrentAlgo("BFS");
        }
    }//GEN-LAST:event_goToBfsButtonMouseClicked

    private void nextLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nextLabelMouseEntered
        nextLabel.setIcon(new javax.swing.ImageIcon("src\\com\\algobuddy\\gui\\img\\nextLabelHover.png"));
    }//GEN-LAST:event_nextLabelMouseEntered

    private void nextLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nextLabelMouseExited
        nextLabel.setIcon(new javax.swing.ImageIcon("src\\com\\algobuddy\\gui\\img\\nextLabel.png"));
    }//GEN-LAST:event_nextLabelMouseExited

    private void nextLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nextLabelMouseClicked
        if (getCurrentComponentName(mainPanel).equals("algoOverviewPanel")) {
            if (GraphBoard.getCurrentAlgo() == "BFS") {
                mainPanel.nextSlidingPanel(10, simulationPanel, JSlidingPane.Direction.Left);
                simulationPanel.add(new BFS(), java.awt.BorderLayout.CENTER);
                titleBar.setBackground(new Color(0, 14, 26));
                titleBar.setBorder(javax.swing.BorderFactory.createLineBorder(new Color(0, 14, 26)));
                nextLabel.setVisible(false);
                algoOverviewPanel.removeAll();
            }
            if (GraphBoard.getCurrentAlgo() == "Dijkstra") {
                mainPanel.nextSlidingPanel(10, simulationPanel, JSlidingPane.Direction.Left);
                simulationPanel.add(new Dijkstra(), java.awt.BorderLayout.CENTER);
                titleBar.setBackground(new Color(0, 14, 26));
                titleBar.setBorder(javax.swing.BorderFactory.createLineBorder(new Color(0, 14, 26)));
                nextLabel.setVisible(false);
                algoOverviewPanel.removeAll();
            }
        }
    }//GEN-LAST:event_nextLabelMouseClicked

    private void formWindowDeiconified(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowDeiconified
        setExtendedState(extendedState);
    }//GEN-LAST:event_formWindowDeiconified

    private void goToDijkstraButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_goToDijkstraButtonMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) {
            openHtml(algoOverviewPanel, "src\\com\\algobuddy\\gui\\html\\bfs.htm");
            mainPanel.nextSlidingPanel(10, algoOverviewPanel, JSlidingPane.Direction.Left);
            titleBar.setBackground(new Color(57, 55, 55));
            titleBar.setBorder(javax.swing.BorderFactory.createLineBorder(new Color(57, 55, 55)));
            nextLabel.setVisible(true);
            GraphBoard.setCurrentAlgo("Dijkstra");
        }
    }//GEN-LAST:event_goToDijkstraButtonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        try {
            UIManager.setLookAndFeel(new FlatNightOwlIJTheme());
            UIManager.put("Button.arc", 0);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            mainFrame = new MainFrame();
            mainFrame.setVisible(true);
        });
    }

    private class EnterAction extends AbstractAction {

        @Override
        public void actionPerformed(ActionEvent e) {
            if (getCurrentComponentName(mainPanel).equals("introPanel")) {
                mainPanel.nextSlidingPanel(10, indexPanel, JSlidingPane.Direction.Down);
                titleBar.setBackground(new Color(18, 8, 13));
                titleBar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(18, 8, 13)));
                backLabel.setVisible(true);
            }
        }
    }

    private String getCurrentComponentName(Container parent) {
        String compName = null;
        Component comp = null;
        int n = parent.getComponentCount();
        for (int i = 0; i < n; i++) {
            comp = parent.getComponent(i);
            if (comp.isVisible()) {
                compName = comp.getName();
            }
        }
        return compName;
    }

    private void openHtml(final JPanel panel, String filePath) {
        panel.setLayout(new FlowLayout());

        JEditorPane jEditorPane = new JEditorPane();
        jEditorPane.setEditable(false);
        jEditorPane.setBackground(new Color(57, 55, 55));

        jEditorPane.addHyperlinkListener((HyperlinkEvent e) -> {
            if (e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {
                if (Desktop.isDesktopSupported()) {
                    try {
                        Desktop.getDesktop().browse(e.getURL().toURI());
                    } catch (URISyntaxException | IOException ex) {
                        Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        });

        try {
            jEditorPane.setPage(new File(filePath).toURI().toURL());
        } catch (IOException e) {
            jEditorPane.setContentType("text/html");
            jEditorPane.setText("<html>Page not found.</html>");
        }

        JScrollPane jScrollPane = new JScrollPane(jEditorPane);
        jScrollPane.setViewportBorder(null);
        jScrollPane.setBorder(null);
        jScrollPane.setPreferredSize(new Dimension(780, 595));
        jScrollPane.getVerticalScrollBar().setBackground(new Color(57, 55, 55));
        jScrollPane.getVerticalScrollBar().setUI(new BasicScrollBarUI() {
            @Override
            protected void configureScrollBarColors() {
                this.thumbColor = new Color(18, 19, 18);
            }

            @Override
            protected Dimension getMaximumThumbSize() {
                return new Dimension(0, 40);
            }

            @Override
            protected JButton createIncreaseButton(int i) {
                return new ScrollBarButton();
            }

            @Override
            protected JButton createDecreaseButton(int i) {
                return new ScrollBarButton();
            }

            @Override
            protected void paintTrack(Graphics grphcs, JComponent jc, Rectangle rctngl) {
                Graphics2D g2 = (Graphics2D) grphcs;
                g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
                int width = rctngl.width / 2;
                int x = rctngl.x + ((rctngl.width - width) / 2);
                g2.setColor(new Color(178, 178, 178));
                g2.fillRect(x, rctngl.y, width, rctngl.height - 10);
            }

            @Override
            protected void paintThumb(Graphics grphcs, JComponent jc, Rectangle rctngl) {
                Graphics2D g2 = (Graphics2D) grphcs;
                g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
                int x = rctngl.x;
                int y = rctngl.y;
                g2.setColor(new Color(38, 36, 36));
                g2.fillRect(x, y, 9, 30);
            }

            private class ScrollBarButton extends JButton {

                public ScrollBarButton() {
                    setBorder(BorderFactory.createEmptyBorder(7, 0, 0, 0));
                }

                @Override
                public void paint(Graphics grphcs) {
                }
            }
        });

        panel.add(jScrollPane);
    }

    static MainFrame getMainFrame() {
        return mainFrame;
    }

    static JSlidingPane getMainPanel() {
        return mainPanel;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel algoOverviewPanel;
    private javax.swing.JLabel backLabel;
    private javax.swing.JLabel closeLabel;
    private javax.swing.JButton goToBfsButton;
    private javax.swing.JButton goToDfsButton;
    private javax.swing.JButton goToDijkstraButton;
    private javax.swing.JButton goToGraphButton;
    private javax.swing.JButton goToMstButton;
    private javax.swing.JButton goToRecursionButton;
    private javax.swing.JButton goToSortButton;
    private javax.swing.JLabel graphIndexLabel;
    private keeptoo.KGradientPanel graphIndexPanel;
    private javax.swing.JLabel indexLabel;
    private keeptoo.KGradientPanel indexPanel;
    private javax.swing.JLabel introGifLabel;
    private javax.swing.JLabel introLogoLabel;
    private keeptoo.KGradientPanel introPanel;
    private javax.swing.JLabel introTextLabel;
    private static com.algobuddy.gui.JSlidingPane mainPanel;
    private javax.swing.JLabel minimizeLabel;
    private javax.swing.JLabel nextLabel;
    private com.algobuddy.gui.GraphPanel simulationPanel;
    private javax.swing.JPanel titleBar;
    private javax.swing.JButton userManualButton;
    // End of variables declaration//GEN-END:variables
}
